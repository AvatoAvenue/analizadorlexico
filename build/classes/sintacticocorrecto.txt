namespace uno
{
    using System;
    let int x;

    public class uno 
    {
        enum saludos = {hola, hallo, hello};
        struct despedidas
        {
            let string despedida = "adios";
        }
        interface dias
        {
            let string dia = "lunes";
        }
        public function declaraciones(int x)
        {
            let int x;
            let string y;
        }
        private bool function operaciones(int x, int y, int z)
        {
            x = (x * y);
            y = (y / z + 0);
            z = (x + y + z / 2);
            
            int[2,3,4] precio;
            int[3] cliente = {1,2,3};

            List[int] ventas;
            List[int] compras = {frutas,manzana,naranjas};
        }
    }

    class dos
    {
        public function ciclos(int a, int b)
        {
            try
            {
                if (a>b) {
                    printo(a);
                }
                elif (a<b) { printo(b); }
                else { printo(0); }

                while (a==b): { scani(); }

                dow (a<=b): {
                    a = (a + 1);
                }

                for (let int i = 0; i>>; x>i) {
                    printo(x + "mayor que" + i);
                }

                foreach (string saludo in saludos):
                {
                    printo(saludo);
                }
            }
            catch { printo("error"); }
            finally { printo("correcto"); }
        }
    }
}
namespace dos
{
    using Linux;
    let int x, y=0;

    class tres
    {
        public function print()
        {
            printo("tres");
        }
    }
    private class cuatro
    {
        public function scan()
        {
            scani();
        }
    }
    protected class cinco
    {
        protected function operadores(int x, int y)
        {
            cuadrado = (int x) => (x * x);
            x = (y<1) ? "cierto" : "falso";
        }
    }
}
