if
switch
else
elif
ifdef
ifndef
elifdef
elifndef
unless
match
case
when
for
while
loop
do
foreach
until
FOR
struct
union
enum
fn
def
function
let
i32
u32
f64
BigInteger
byte
decimal
double
float
int
long
sbyte
short
uint
ulong
ushort
_BitInt
_Complex
_Decimal128
_Decimal32
_Decimal64
_Imaginary
bool
boolean
_Bool
char
Span
Memory
delegate
interface
ref
ref mut
mod
const
static
file
+
/

?
*
**
class

<

    =
    <=
    *>
    ==
    <>

abstract
sealed
as
base
property
indexer
event
field
catch
finally
try
except
break
ESCAPE
checked
continue
goto
default
assembly
module
explicit
extern
foreign
false
true
fixed
global
golobal
nonlocal
StackTrace
implicit
in
internal
private
protected
public
is
instanceof
istanceOf
lock
Monitor
synchronized
namespace
new
null
None
nil
object
operator
out
override
params
readonly
final
Exception
return
sizeof
stackalloc
ArgumentException
string
InvalidOperationException
this
self
throw
raise
typeof
typeof_unqual
unchecked
unsafe
using
virtual
void
volatile
nameof
add
ADD
allows
alias
and
not
or
False
True
ascending
descending
orderby
args
async
await
Task
dynamic
equals
from
get
group
init
into
join
Thread
managed
unmanaged
nint
nuint
notnull
on
partial
record
remove
required
scoped
select
set
value
var
where
Interlocked
with
yield
ArgIterator
=>
??
?[
?.
??=
,,,
->
&
Main
ENTRY
Dictionary
del
import
lambda
assert
form
pass
export
package
native
super
arguments
extends
implements
transient
eval
alignas
_Alignas
alignof
_Alignof
auto
constexpr
inline
register
restrict
signed
unsigned
static_assert
_Static_assert
thread_local
_Thread_local
typedef
newtype
type
_Generic
_Noreturn
_packed
endif
define
undef
include
embed
line
error
warning
pragma
defined
_has_include
_has_embed
redo
next
BEGIN
begin
END
ensure
defined?
retry
data
data family
data instance
deriving
deriving instance
forall
mdo
infix
infixl
infixr
hiding
proc
qualified
rec
type family
type instance
debugger
ACCESS
ADVANCING
AFTER
ALL
ABEND
PREVIOUS
POSITION
ERASE
EVALUATE
PROCEED
RECORDS
FIRST
BOTTOM
BELL
REPLACING
GENERATE
BLANK
BIT
BINARY-SHORT
BINARY-CHAR
